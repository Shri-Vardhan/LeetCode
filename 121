/*************************************************************
* Author      : Shri
* Copyright   : Open-source (for learning purposes)
* Description : Best Time to Buy and Sell Stock
* Problem     : Given an array of prices, return the max profit 
*               from a single buy & sell transaction.
* Constraints : 1 <= prices.length <= 10^5
*               0 <= prices[i] <= 10^4
*************************************************************/
BRUTE FORCE
int maxProfit(int* prices, int pricesSize) {
    int profit , max=0;
    for(int i=0 ; i<pricesSize ; i++){
        for(int j=i+1 ; j<pricesSize ; j++){
            profit = prices[j]-prices[i];
            if(profit>max){
                max=profit;
            }
        }
    }
    return max;
}

OPTIMIZED
int maxProfit(int* prices, int pricesSize) {
int minprice = prices[0] , maxprofit = 0;
for (int i=0 ; i<pricesSize; i++){
    if(prices[i] < minprice){
        minprice = prices[i];
    }
    else{
        int profit = prices[i] - minprice;
        if(profit>maxprofit){
            maxprofit = profit;
        }
    }
}
    return maxprofit;
}
